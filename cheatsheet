sudo yum install epel-release

sudo yum install ansible

ssh-keygen | generate ssh keys /home/<username>/.ssh/ dir

ssh-copy-id <remoteuser>@<hostname>  | copy generated ssh public key into  /home/<remoteuser>/.ssh/authorized_keys to target ansible hosts

<username> ALL=(ALL) NOPASSWD: ALL | run as sudo without password

Configurations :
 /etc/ansible/ansible.cfg | Default configratuion file     

Inventory File :

 /etc/ansible/hosts    | Default hosts file add target hostname or host-ipaddress 
  
  Ip Address         | 10.10.10.10 / 192.168.19.20
  Hostnames          | ex : www[001:006].example.com / db-[99:101]-node.example.com
  [ group-name ]     | Group servers     

  <hostalias> ansible_hosts=<ip/hostname>  |   ex: myserver    ansible_hosts=127.0.0.1

  ansible_user=<target host usernames to run ansible task>
  ansible_port=<custom ssh port>

 -i <inventory path>
 
 Dynamic Inventory 

 
Ad-hoc commands  :

 # ansible <host> -b -m <module> -a <arg1 arg2 arg3>
 - b to be a root user
 - a to parameters <without -m its like remote command>

 # ansible all -i inv -m ping | ping hosts for connectivity

 # ansible all -i inv -m setup  | gathers facts about remote hosts

 # anisble host -i inv -b -m yum -a "name=httpd state=latest"

 # ansible host -i inv -b -m service -a "name=httpd state=started"


Playbooks:
  
  # ansible-playbook all -i inv nginx-play.yml | Install and Starts Nginx webserver

  # ansible-playbook all -i inv httpd-play.yml | Install and Starts Apache2 Webserver and git clone of sameple website

Variables scope :

  alias ansible_host=[hostname-fqdn/ip-address] | Inventory vars
  
  
  host_vars  | same as host name as declared in inventory file 
  group_vars | same as group name as declared in inventory file
  playbooks  | withon playbook
  inventory  | inventory file 
  external   | passed externally -e@vars_filename.yml 

  # cp -v variables/vars-types.yml group_vars/<group_name>
  # cp -v variables/vars-types.yml group_vars/<host_name>

  # ansible-playbook -i inv variables/vars-example-play.yml 

  -e command line passing variables as

  # ansible-playbook -i inv vars-example-play.yml -e "user_home=showry"
  # ansible-playbook -i inv vars-example-play.yml -e@variables/vars-types.yml
  
  special characters [ ] { } : | >  

Ansible facts:
 
 # ansible all -i inv -m setup  | gathers facts about remote hosts
 
 # ansible all -i inv -m setup -a filter=*ipv4*

 # ansible.cfg has default settings fact_caching = memory but can be stored as [memory or jsonfile or redis] storage requirement must be considered fact_caching_connection=[ /tmp or redishost:port:database ] 
   - ansible all -i inv -m setup


Condition :

 # ansible-playbook -i inv condition-play.yml

Loops: 
 
 # ansible-playbook -i inv loop-play.yml

Handlers:
   
 # ansible-playbook -i inv handlers-play.yml | handlers runs only once throughout playbook execution and can be referenced in multiple tasks

Tags:

 # ansible-playbook -i inv tags-play.yml --tags software
 
 # ansible-playbook -i inv tags-play.yml -t software,files
 
 # ansible-playbook -i inv tags-play.yml --skip-tags software

Vault
 
 # ansible-vault encrypt vault  |Â enter password to encrypt vault file contents  
  
 # ansible-vault decrypt vault  | enter original password to decrypt vault file contents
 
 # ansible-vault encrypt --vault-id vault-label-prod@prompt vault   | encrypt with labels enter encryption password
 
 # ansible-vault decrypt --vault-id vault-label-prod@prompt vault   | decrypt with labels enter orignal password

 # ansible-vault encrypt vault --vault-id vault-label-prod@vault-encrypt-password | encrypt with vault password stored in vault-encrypt-password file
 
 # ansible-vault decrypt vault --vault-id vault-label-prod@vault-encrypt-password | encrypt with vault password stored in vault-encrypt-password file

 # ansible-playbook -i inv vault-play.yml --vault-id vault-label-prod@prompt | pass label and enter password used for encryption
 
 # ansible-playbook -i inv vault-play.yml --vault-id vault-label-prod@vault-encrypt-password | pass label and vault-encrypt-password file as password

 # ansible-vault view vault |  view in plain text

 # ansible-vault edit vault |  edit vault secrets

 # ansible-vault encrypt_string --vault-id vault-label-string@vault-encrypt-password "new-password: password123"  | output can be used directly inside vars section of playbook 

Error Handling
 
 # ansible-playbook  -i inv error-play.yml | ignore_error to ignore errors and changed_when & failed_when condition from output

 # ansible-playbook  -i inv error-debug-play.yml | debug vars and msgs from tasks executions inside block in rescue always condition

Asynchronous actions 
 
 # ansible-playbook  -i inv async-play.yml  | aysnc is like timeout and poll is how often to check back. when poll = 0 is disabled.

Delegation

 # ansible-playbook -i inv delegate-play.yml | delegate_to - localhost to wait run to some script from control node

 # ansible-playbook -i inv run-once-play.yml | run_once: yes - runs only once

Parallelism

 # 5 forks - ansible parallelism by default in ansible.cfg  should support serial execution 
 
 # serial: 1 | batch no of hosts to execution of playbooks one after other
 
 # serial: 
   - 1 
   - 3 
   - 5 | batch no of hosts to execution of playbooks

 # serial: 
   - "10%" 
   - "30%" 
   - "50%" | batch no of hosts to execution of playbooks

 # max_fail_percentage: 10 

 # run_once: yes | simply one time with 

Ansible Roles

 # allow_duplicates: true | TBD

 # ansible-galaxy search apache | search in galaxy 

 # ansible-galaxy install geerlingguy.apache | <galaxy username>.<rolename> - /home/<user>/.ansible/roles/geerlingguy.apache

 # ansible-galaxy init role-name

 defaults    | declare any default variables unless overide by vars or playbook ( entrypoint main.yml ) 
 files       | files will be used in role  
 handlers    | all handlers  only ( entrypoint main.yml )
 LICENSE     | license file
 meta        | meta information
 README.md   | readme file 
 tasks       | all tasks ( entrypoint main.yml )
 templates   | templates files
 test        | test playbooks
 vars        | variables dir ( entrypoint main.yml )
